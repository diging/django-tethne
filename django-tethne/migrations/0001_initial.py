# -*- coding: utf-8 -*-
# Generated by Django 1.9.4 on 2016-04-25 17:13
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Affiliation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(null=True)),
                ('end_date', models.DateField(null=True)),
                ('confidence', models.FloatField(default=0.0, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Affiliation_Instance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('confidence', models.FloatField(default=0.0, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=60)),
                ('last_name', models.CharField(max_length=60)),
                ('identifier', models.CharField(max_length=1000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Author_Identity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('confidence', models.FloatField(default=0.0, null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='authoridentity_name', to='django-tethne.Author')),
            ],
        ),
        migrations.CreateModel(
            name='Author_Instance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=45, null=True)),
                ('last_name', models.CharField(max_length=45, null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='authorinstance_name', to='django-tethne.Author')),
            ],
        ),
        migrations.CreateModel(
            name='Citation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('literal', models.CharField(max_length=255, null=True)),
                ('journal', models.CharField(max_length=255, null=True)),
                ('first_author', models.CharField(max_length=45, null=True)),
                ('date', models.DateField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Citation_Identity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('confidence', models.FloatField(default=0.0, null=True)),
                ('citation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='identity_citation', to='django-tethne.Citation')),
            ],
        ),
        migrations.CreateModel(
            name='Citation_Instance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('literal', models.CharField(max_length=255, null=True)),
                ('journal', models.CharField(max_length=255, null=True)),
                ('first_author', models.CharField(max_length=45, null=True)),
                ('date', models.DateField(null=True)),
                ('citation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='citation', to='django-tethne.Citation')),
            ],
        ),
        migrations.CreateModel(
            name='Corpus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('length', models.IntegerField(null=True)),
                ('label', models.CharField(max_length=10, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Institution',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000, null=True)),
                ('addressLine1', models.CharField(max_length=1000, null=True)),
                ('addressLine2', models.CharField(max_length=1000, null=True)),
                ('state', models.CharField(max_length=1000, null=True)),
                ('city', models.CharField(max_length=1000, null=True)),
                ('zip', models.CharField(max_length=1000, null=True)),
                ('country', models.CharField(max_length=1000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Institution_Identity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('confidence', models.FloatField(default=0.0, null=True)),
                ('institution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='institutionidentity_name', to='django-tethne.Institution')),
            ],
        ),
        migrations.CreateModel(
            name='Institution_Instance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('department', models.CharField(max_length=1000, null=True)),
                ('name', models.CharField(max_length=1000, null=True)),
                ('addressLine1', models.CharField(max_length=1000, null=True)),
                ('addressLine2', models.CharField(max_length=1000, null=True)),
                ('state', models.CharField(max_length=1000, null=True)),
                ('city', models.CharField(max_length=1000, null=True)),
                ('zip', models.CharField(max_length=1000, null=True)),
                ('country', models.CharField(max_length=1000, null=True)),
                ('institution', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='insitution_name', to='django-tethne.Institution')),
            ],
        ),
        migrations.CreateModel(
            name='Paper',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paper_id', models.CharField(max_length=355)),
                ('pub_date', models.CharField(max_length=355)),
                ('title', models.CharField(max_length=1000, null=True)),
                ('volume', models.CharField(max_length=40, null=True)),
                ('issue', models.CharField(max_length=40, null=True)),
                ('abstract', models.TextField(null=True)),
                ('corpus', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='collection', to='django-tethne.Corpus')),
            ],
        ),
        migrations.CreateModel(
            name='Source',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[(b'JSTOR', b'Jstor'), (b'WOS', b'World of Science'), (b'ZOTERO', b'Zotero'), (b'SCOPUS', b'Scopus')], max_length=35, null=True)),
            ],
        ),
        migrations.AddField(
            model_name='institution_instance',
            name='paper',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='institution_paper', to='django-tethne.Paper'),
        ),
        migrations.AddField(
            model_name='institution_identity',
            name='institution_instance',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='insitutionidentity_instance', to='django-tethne.Institution_Instance'),
        ),
        migrations.AlterUniqueTogether(
            name='institution',
            unique_together=set([('name', 'city')]),
        ),
        migrations.AddField(
            model_name='corpus',
            name='source',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='corpora', to='django-tethne.Source'),
        ),
        migrations.AddField(
            model_name='citation_instance',
            name='paper',
            field=models.ForeignKey(auto_created=b'ciation_papercited', on_delete=django.db.models.deletion.CASCADE, to='django-tethne.Paper'),
        ),
        migrations.AddField(
            model_name='citation_identity',
            name='citation_instance',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='identity_citationinstance', to='django-tethne.Citation_Instance'),
        ),
        migrations.AddField(
            model_name='citation',
            name='paper',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='papercited', to='django-tethne.Paper'),
        ),
        migrations.AddField(
            model_name='author_instance',
            name='paper',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='authorinstance_by', to='django-tethne.Paper'),
        ),
        migrations.AddField(
            model_name='author_identity',
            name='author_instance',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='authoridentity_instance', to='django-tethne.Author_Instance'),
        ),
        migrations.AlterUniqueTogether(
            name='author',
            unique_together=set([('first_name', 'last_name')]),
        ),
        migrations.AddField(
            model_name='affiliation_instance',
            name='author_instance',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='affiliationinstance_authorinstance', to='django-tethne.Author_Instance'),
        ),
        migrations.AddField(
            model_name='affiliation_instance',
            name='institution_instance',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='affiliationinstance_institutionInstance', to='django-tethne.Institution_Instance'),
        ),
        migrations.AddField(
            model_name='affiliation',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='affiliation_authorname', to='django-tethne.Author'),
        ),
        migrations.AddField(
            model_name='affiliation',
            name='institution',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='affiliation_institution', to='django-tethne.Institution'),
        ),
        migrations.AlterUniqueTogether(
            name='paper',
            unique_together=set([('paper_id', 'corpus')]),
        ),
        migrations.AlterUniqueTogether(
            name='institution_instance',
            unique_together=set([('institution', 'paper')]),
        ),
        migrations.AlterUniqueTogether(
            name='institution_identity',
            unique_together=set([('institution', 'institution_instance')]),
        ),
        migrations.AlterUniqueTogether(
            name='author_instance',
            unique_together=set([('paper', 'author')]),
        ),
        migrations.AlterUniqueTogether(
            name='author_identity',
            unique_together=set([('author', 'author_instance')]),
        ),
        migrations.AlterUniqueTogether(
            name='affiliation',
            unique_together=set([('author', 'institution', 'start_date')]),
        ),
    ]
